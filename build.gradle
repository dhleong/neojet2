plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'com.github.ben-manes.versions' version '0.21.0'
}

allprojects {

    repositories {
        mavenCentral()
    }

    ext {
        neojet = [
            group: "org.neojet",
            version: "1.0-SNAPSHOT",
        ]
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
        }
    }
}

ext.vs = [
    msgpack: '0.8.20',
    coroutines: '1.3.9',

    test: [
        assertk: '0.13',
        junit: '4.12',
        mockitoKotlin: '2.1.0',
    ],
]

ext.deps = [
    jackson: [
        kotlin: 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2',
    ],

    kotlin: [
        core: 'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
        coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${vs.coroutines}",
        swing: "org.jetbrains.kotlinx:kotlinx-coroutines-swing:${vs.coroutines}",
        reflect: 'org.jetbrains.kotlin:kotlin-reflect',

        poet: 'com.squareup:kotlinpoet:1.5.0',
    ],

    msgpack: [
        core: "org.msgpack:msgpack-core:${vs.msgpack}",
        jackson: "org.msgpack:jackson-dataformat-msgpack:${vs.msgpack}",
    ],

    test: [
        assertk: "com.willowtreeapps.assertk:assertk-jvm:${vs.test.assertk}",
        junit: "junit:junit:${vs.test.junit}",
        mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${vs.test.mockitoKotlin}",
    ],
]
